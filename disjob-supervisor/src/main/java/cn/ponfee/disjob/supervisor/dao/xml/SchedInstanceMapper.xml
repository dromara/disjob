<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ponfee.disjob.supervisor.dao.mapper.SchedInstanceMapper">

  <sql id="Table_Name">sched_instance</sql>

  <sql id="Base_Column_List">
    instance_id, rnstance_id, pnstance_id, wnstance_id, job_id,
    trigger_time, run_type, run_state, run_start_time, run_end_time,
    run_duration, retried_count, next_scan_time, attach, version
  </sql>

  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.ponfee.disjob.core.model.SchedInstance" useGeneratedKeys="true">
    INSERT INTO <include refid="Table_Name" /> (
      instance_id,
      rnstance_id,
      pnstance_id,
      wnstance_id,
      job_id,
      trigger_time,
      run_type,
      unique_flag,
      run_state,
      run_start_time,
      retried_count,
      attach
    ) VALUES (
      #{instanceId,jdbcType=BIGINT},
      #{rnstanceId,jdbcType=BIGINT},
      #{pnstanceId,jdbcType=BIGINT},
      #{wnstanceId,jdbcType=BIGINT},
      #{jobId,jdbcType=BIGINT},
      #{triggerTime,jdbcType=BIGINT},
      #{runType,jdbcType=TINYINT},
      #{uniqueFlag,jdbcType=BIGINT},
      #{runState,jdbcType=TINYINT},
      #{runStartTime,jdbcType=TIMESTAMP},
      #{retriedCount,jdbcType=TINYINT},
      #{attach,jdbcType=VARCHAR}
    )
  </insert>

  <select id="get" parameterType="_long" resultType="cn.ponfee.disjob.core.model.SchedInstance">
    SELECT <include refid="Base_Column_List" />
    FROM <include refid="Table_Name" />
    WHERE instance_id = #{instanceId,jdbcType=BIGINT}
  </select>

  <select id="getJobId" parameterType="_long" resultType="long">
    SELECT job_id
    FROM <include refid="Table_Name" />
    WHERE instance_id = #{instanceId,jdbcType=BIGINT}
  </select>

  <select id="getByUniqueKey" resultType="cn.ponfee.disjob.core.model.SchedInstance">
    SELECT <include refid="Base_Column_List"/>
    FROM <include refid="Table_Name" />
    WHERE job_id = #{jobId,jdbcType=BIGINT}
      AND trigger_time = #{triggerTime,jdbcType=BIGINT}
      AND run_type = #{runType,jdbcType=TINYINT}
      AND unique_flag = #{uniqueFlag,jdbcType=BIGINT}
  </select>

  <select id="getWnstanceId" parameterType="_long" resultType="long">
    SELECT wnstance_id
    FROM <include refid="Table_Name" />
    WHERE instance_id = #{instanceId,jdbcType=BIGINT}
  </select>

  <select id="findChildren" resultType="cn.ponfee.disjob.core.model.SchedInstance">
    SELECT <include refid="Base_Column_List"/>
    FROM <include refid="Table_Name" />
    WHERE pnstance_id = #{pnstanceId}
        <if test="runType != null">
          AND run_type = #{runType}
        </if>
  </select>

  <!-- use `IFNULL` function reason: possibly paused task re-execute -->
  <update id="start">
    UPDATE <include refid="Table_Name" />
    SET run_state = 20,
        run_start_time = IFNULL(run_start_time, #{runStartTime,jdbcType=TIMESTAMP}),
        version = version+1
    WHERE instance_id = #{instanceId,jdbcType=BIGINT}
      AND run_state = 10
  </update>

  <!--
   SELECT ROUND(TIMESTAMPDIFF(MICROSECOND, '2018-05-19 12:54:43.987', '2018-05-19 12:54:43.999') / 1000)
   SELECT ROUND((UNIX_TIMESTAMP('2018-05-19 12:54:43.999') - UNIX_TIMESTAMP('2018-05-19 12:54:43.987')) * 1000)
  -->
  <update id="terminate">
    UPDATE <include refid="Table_Name" />
    SET run_state = #{toState,jdbcType=TINYINT},
      <if test="runEndTime != null">
        run_end_time = IF(run_start_time IS NULL, NULL, #{runEndTime,jdbcType=TIMESTAMP}),
        run_duration = ROUND(TIMESTAMPDIFF(MICROSECOND, run_start_time, #{runEndTime,jdbcType=TIMESTAMP}) / 1000),
      </if>
        version = version+1
    WHERE instance_id = #{instanceId,jdbcType=BIGINT}
      AND run_state IN (<foreach collection="fromStateList" separator="," item="state">#{state,jdbcType=TINYINT}</foreach>)
  </update>

  <update id="updateState">
    UPDATE <include refid="Table_Name" />
    SET run_state = #{toState,jdbcType=TINYINT},
        version = version+1
    WHERE instance_id = #{instanceId,jdbcType=BIGINT}
      AND run_state = #{fromState,jdbcType=TINYINT}
  </update>

  <select id="findExpireState" resultType="cn.ponfee.disjob.core.model.SchedInstance">
    SELECT <include refid="Base_Column_List"/>
    FROM <include refid="Table_Name" />
    WHERE run_state = #{runState,jdbcType=TINYINT}
      AND trigger_time &lt; #{expireTime.time,jdbcType=BIGINT}
      AND next_scan_time &lt; #{expireTime,jdbcType=TIMESTAMP}
      AND (wnstance_id IS NULL OR instance_id != wnstance_id)
    ORDER BY trigger_time
    LIMIT #{size}
  </select>

  <select id="findUnterminatedRetry" parameterType="_long" resultType="cn.ponfee.disjob.core.model.SchedInstance">
    SELECT <include refid="Base_Column_List"/>
    FROM <include refid="Table_Name" />
    WHERE pnstance_id = #{instanceId,jdbcType=BIGINT}
      AND run_type = 3
      AND run_state &lt; 40
  </select>

  <select id="findWorkflowNode" parameterType="_long" resultType="cn.ponfee.disjob.core.model.SchedInstance">
    SELECT <include refid="Base_Column_List"/>
    FROM <include refid="Table_Name" />
    WHERE wnstance_id = #{wnstanceId,jdbcType=BIGINT}
      AND wnstance_id != instance_id
  </select>

  <update id="updateNextScanTime">
    UPDATE <include refid="Table_Name" />
    SET next_scan_time = #{nextScanTime,jdbcType=TIMESTAMP},
        version = version+1
    WHERE instance_id = #{instanceId,jdbcType=BIGINT}
      AND version = #{version,jdbcType=INTEGER}
  </update>

  <select id="lock" parameterType="_long" resultType="cn.ponfee.disjob.core.model.SchedInstance">
    SELECT <include refid="Base_Column_List" />
    FROM <include refid="Table_Name" />
    WHERE instance_id = #{instanceId,jdbcType=BIGINT}
    FOR UPDATE
  </select>

  <delete id="deleteByInstanceId" parameterType="_long">
    DELETE FROM <include refid="Table_Name" />
    WHERE instance_id = #{instanceId,jdbcType=BIGINT} AND run_state >= 40
  </delete>

  <delete id="deleteByWnstanceId" parameterType="_long">
    DELETE FROM <include refid="Table_Name" />
    WHERE wnstance_id = #{wnstanceId,jdbcType=BIGINT}
      AND (SELECT cnt FROM (SELECT COUNT(*) cnt FROM <include refid="Table_Name" /> WHERE wnstance_id = #{wnstanceId,jdbcType=BIGINT} AND run_state &lt; 40) t)=0
  </delete>

  <!-- ********************page query******************** -->

  <select id="queryPageCount" resultType="_long">
    SELECT COUNT(*) cnt
    FROM <include refid="Table_Name" />
    <include refid="Query_Page_Condition" />
  </select>

  <select id="queryPageRecords" resultType="cn.ponfee.disjob.core.model.SchedInstance">
    SELECT <include refid="Base_Column_List" />
    FROM <include refid="Table_Name" />
    <include refid="Query_Page_Condition" />
    ORDER BY trigger_time DESC
    LIMIT #{offset}, #{pageSize}
  </select>

  <select id="queryByPnstanceId" parameterType="_long" resultType="cn.ponfee.disjob.core.model.SchedInstance">
    SELECT <include refid="Base_Column_List" />
    FROM <include refid="Table_Name" />
    WHERE pnstance_id = #{pnstanceId}
  </select>

  <select id="queryChildCount" parameterType="collection" resultType="map">
    SELECT pnstance_id AS pnstanceId, count(*) count
    FROM <include refid="Table_Name" />
    WHERE pnstance_id IN (<foreach collection="collection" separator="," item="jobId">#{jobId,jdbcType=BIGINT}</foreach>)
    GROUP BY pnstance_id
  </select>

  <sql id="Query_Page_Condition">
    <where>
      <if test="jobId != null">
        AND job_id = #{jobId}
      </if>
      <if test="instanceId != null">
        AND instance_id = #{instanceId}
      </if>
      <if test="runType != null">
        AND run_type = #{runType}
      </if>
      <if test="runState != null">
        AND run_state = #{runState}
      </if>
      <if test="startTime != null">
        AND trigger_time >= #{startTime.time,javaType=_long}
      </if>
      <if test="endTime != null">
        AND trigger_time &lt;= #{endTime.time,javaType=_long}
      </if>
      <if test="parent">
        AND pnstance_id IS NULL
      </if>
    </where>
  </sql>

</mapper>
